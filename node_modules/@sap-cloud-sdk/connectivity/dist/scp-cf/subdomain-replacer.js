"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseSubdomain = exports.replaceSubdomain = void 0;
const url_1 = require("url");
/**
 * @internal
 */
function replaceSubdomain(issuerUrl, xsuaaUrl) {
    if (!isValidURL(issuerUrl)) {
        throw new Error('JWT issuer URL is not valid "' + issuerUrl + '".');
    }
    if (!isValidURL(xsuaaUrl)) {
        throw new Error('XSUAA URL is not valid "' + xsuaaUrl + '".');
    }
    const subdomain = parseSubdomain(issuerUrl);
    return replace(xsuaaUrl, subdomain);
}
exports.replaceSubdomain = replaceSubdomain;
function replace(xsuaaUrl, subdomain) {
    const parsedXsuaaUrl = new url_1.URL(xsuaaUrl);
    const scheme = parsedXsuaaUrl.protocol + '//';
    const xsuaaDomain = xsuaaUrl.slice(xsuaaUrl.indexOf('.'));
    return scheme + subdomain + xsuaaDomain;
}
/**
 * @internal
 */
function parseSubdomain(issuerUrl) {
    const url = new url_1.URL(issuerUrl);
    const host = url.host;
    if (!host || host.indexOf('.') === -1) {
        throw new Error('Failed to determine sub-domain: invalid host in "' + issuerUrl + '".');
    }
    return host.split('.')[0];
}
exports.parseSubdomain = parseSubdomain;
function isValidURL(url) {
    try {
        new url_1.URL(url);
        return true;
    }
    catch (_) {
        return false;
    }
}
//# sourceMappingURL=subdomain-replacer.js.map