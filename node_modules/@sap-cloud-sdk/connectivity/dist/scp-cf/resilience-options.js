"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.timeoutPromise = exports.circuitBreakerDefaultOptions = exports.defaultResilienceBTPServices = void 0;
/**
 * @internal
 */
exports.defaultResilienceBTPServices = {
    enableCircuitBreaker: true,
    timeout: 10000
};
/**
 * @internal
 */
exports.circuitBreakerDefaultOptions = {
    timeout: false,
    errorThresholdPercentage: 50,
    volumeThreshold: 10,
    resetTimeout: 30000
};
/**
 * Creates a promise for a timeout race.
 * @internal
 * @param timeout - Value for the timeout.
 * @returns A promise which times out after the given time.
 */
function timeoutPromise(timeout) {
    return new Promise((resolve, reject) => setTimeout(() => reject(new Error('Token retrieval ran into timeout.')), timeout));
}
exports.timeoutPromise = timeoutPromise;
//# sourceMappingURL=resilience-options.js.map