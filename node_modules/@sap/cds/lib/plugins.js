// IMPORTANT We must not use cds.debug/log/env here to allow plugins to change env.defaults
const DEBUG = /\by|all|plugins\b/.test(process.env.DEBUG)
const cds = require('.'), { local } = cds.utils

module.exports = (async function load_plugins (log = console.log) {

  if (DEBUG) console.time('[cds] - loaded plugins in')
  const plugins = {}

  load_from(cds.home) // load well-known plugins from our dependencies
  load_from(cds.root)

  global._plugins = Object.keys(plugins) // used in cds.env
  await Promise.all(Object.values(plugins).map(load => load()))
  if (DEBUG) console.timeEnd('[cds] - loaded plugins in')

  return plugins

  function load_from(pkg_path) {
    let pkg; try { pkg = require(pkg_path + '/package.json') } catch { return }

    if (pkg.cds?.plugins) {
      for (let each of pkg.cds.plugins) {
        let plugin = typeof each === 'string' ? each : each.impl
        if (plugin.startsWith('.'))
          plugin = require.resolve(pkg_path + '/' + plugin)
        _load_plugin(plugin, plugin, each)
      }
    } else {
      const deps = { ...pkg.dependencies, ...(process.env.NODE_ENV !== 'production' && pkg.devDependencies) }
      const plugins = []
      for (let each in deps) try {
        let plugin = require.resolve(each + '/cds-plugin', {paths:[pkg_path]})
        plugins.push (()=>_load_plugin(each, plugin))
      } catch { /* no plugin */ }
      for (let each of plugins) each()
    }

    function _load_plugin (name, impl, conf) {
      plugins[name] = async() => {
        // TODO support ESM plugins.  But see cap/cds/pull/1838#issuecomment-1177200 !
        const plugin = plugins[name] = require(impl)
        if (DEBUG) log('[cds] - loaded plugin:', { impl: local(impl) })
        if (plugin.activate) await plugin.activate(conf)
      }
    }
  }

})()
